# 2023/10/09の宿題
##############################################
#                     問題 
##############################################
# <問1>
#     30から50までの自然数が格納された配列 numbers を作ってください。while 文で作ってください。
# <問2>
#     問1で作った配列 numbers の中の要素が、それぞれ 2,3,5 で割り切れかどうかを print してください。
#     「〜で割り切れます」という日本語の左側にスペース4つ分開けて print してください。
#     どれでも割り切れない場合はなにも表示されません。
#     表示する結果は以下の形式です。
'''
numbers = [30, 31,,,,, 50]
配列の要素: 30
    2で割り切れます。
    3で割り切れます。
    5で割り切れます。
配列の要素: 31
配列の要素: 32
    2で割り切れます。
配列の要素: 33
    3で割り切れます。
配列の要素: 34
    2で割り切れます。
配列の要素: 35
    5で割り切れます。

...36~49までは省略します...

配列の要素: 50
    2で割り切れます。
    5で割り切れます。
'''

# <応用問題>
#   問2 で作ったソースコードを、配列 primes = [2,3,5] を使って、改良してください。
#   具体的には、以下の 'ここを書き換えてください' に入るコードを書いてください。
'''
numbers = [30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50] # 問1での結果を使ってください
primes = [2,3,5]
for number in numbers:
    print('配列の要素: '+str(number))
    for 'ここを書き換えてください':
        if 'ここを書き換えてください':
            print('    '+str(prime)+'で割り切れます。') # prime には、primes のそれぞれの要素が入ります
    print('ーーーーー')
'''

##################### ヒント1 #####################
# <問1>
#   空の配列は「 arr = [] 」という書き方で、初期化することができます。
#   配列に要素を追加する方法は「 arr.apend() 」（配列の変数名.append(入れたい要素)）という書き方です。
# <問2>
#   配列の要素をループさせるときは以下の書き方です。
#   '''
#   nums = [1,2,3]
#   for num in nums:
#       なにかしらの処理
#       print(num)
#   '''
#   「なにかしらの処理」の中では以下のことをします。
#       まず、2で割り切れるかを考えて、割り切れる場合はprint。
#       次に、2で割り切れるかを考えて、割り切れる場合はprint。
#       最後に5で割り切れるかを考えて、割り切れる場合はprintします
##################### ヒント2 #####################
# <問1>
#   while文は以下のように書きます。
#   '''
#   a = 30
#   numbers = []
#   while a <= 50:
#       numbers にaを追加する処理
#       a = a+1 # aに1ずつ足していくことで、aがループごとに30,31,32,...49,50と更新されていきます
#   '''
# <問2>
#   ヒント1中の「なにかしらの処理」では、以下のように書きます。
# 今回は、2,3,5それぞれで、「割り切れるかどうかの判定」が必要なので、if文を3つ書きます。
#   以下の 'ここを書き換えてください' に入るコードを書ければ完成です。
#   '''
#   if ('ここを書き換えてください'):
#       print('    2で割り切れます。')
#   if ('ここを書き換えてください'):
#       print('    3で割り切れます。')
#   if ('ここを書き換えてください'):
#       print('    5で割り切れます。')
#   '''
##################### ヒント3 #####################
# <問3>
# for の右側には、primes の繰り返し文が入ります。
# if の右側には、「numbersのそれぞれの要素が、primesのそれぞれの要素で割り切れるかどうか」を意味する条件文が入ります。

##############################################
#                     解答 
##############################################
# 問1
numbers = []
for num in range(30,51):
    numbers.append(num)
# 問1解説
#  以下の書き方でも良いです。
#   numbers = []
#   a=30
#   while a<=50:
#       numbers.append(a)
#       a=a+1

# 問2
for num in numbers:
    print('配列の要素: '+str(num))
    if (num %2 ==0):
        print('    2で割り切れます')
    if (num %3 ==0):
        print('    3で割り切れます')
    if (num %5 ==0):
        print('    5で割り切れます')
# 問2解説
#   print()文は、入れる場所によって、結果が変わります。
#   今回だと、for文のすぐ下の行に記述することで、「毎回printされる」ようになります。
#   その後、if文で、2,3,5それぞれ割り切れるかチェックします。

# 問3
primes = [2,3,5]
for number in numbers:
    print('配列の要素: '+str(number))
    for prime in primes: 
        if (num %prime ==0):
            print('    '+str(prime)+'で割り切れます。')
    print('ーーーーー')

# 問3解説
#   問2では、似たようなif文が3つ連続しています。
#   もし「2,3,5だけじゃなくて7,11などで割り切れることを確認したい」となる場合に、if文をコピペするのは面倒です。
#   そのため、if文3つを、「for文で3回繰り返す」ように変更した方が望ましいです。
#   まず、以下のブロックをfor文で囲い、
#        if (num %2 ==0):
#            print('    2で割り切れます')
#   以下のようにします。
#        for テキトー変数名 in [2,3,5]: # 2,3,5の繰り返しをfor文にまとめるイメージ
#            if (num %2 ==0):
#                print('    2で割り切れます')
#   その後、整形していきます。
#        for prime in primes: # [2,3,5]はprimesで置き換えられる。primesのそれぞれの要素を、primeと名付ける。
#            if (num %prime ==0): # 2は固定ではなく、ループごとに変わるprimeで置き換える
#                print('    '+str(prime)+'で割り切れます') # 2は固定ではなく、ループごとに変わるprimeで置き換える
